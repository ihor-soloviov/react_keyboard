{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressed","key","handelKey","event","setState","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","className","this","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAOaA,EAAb,4MACEC,MAAQ,CACNC,SAAS,EACTC,IAAK,MAHT,EAMEC,UAAY,SAACC,GACX,EAAKC,SAAS,CAAEJ,SAAS,EAAMC,IAAKE,EAAMF,OAP9C,EAUEI,kBAAoB,WAClBC,SAASC,iBAAiB,QAAS,EAAKL,YAX5C,EAcEM,qBAAuB,WACrBF,SAASG,oBAAoB,QAAS,EAAKP,YAf/C,4CAkBE,WACE,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGC,KAAKZ,MAAMC,QAAX,mCAC+BW,KAAKZ,MAAME,IAD1C,KAEG,kCAxBd,GAAyBW,IAAMC,W,MCF/BC,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.33357f43.chunk.js","sourcesContent":["import React from 'react';\n\ninterface State {\n  pressed: boolean,\n  key: null | string\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    pressed: false,\n    key: null,\n  };\n\n  handelKey = (event: KeyboardEvent) => {\n    this.setState({ pressed: true, key: event.key });\n  };\n\n  componentDidMount = () => {\n    document.addEventListener('keyup', this.handelKey);\n  };\n\n  componentWillUnmount = () => {\n    document.removeEventListener('keyup', this.handelKey);\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {this.state.pressed\n            ? `The last pressed key is [${this.state.key}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}