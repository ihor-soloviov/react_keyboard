{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handelKey","event","setState","key","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","this","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,EAKEC,UAAY,SAACC,GACX,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OANtC,EASEC,kBAAoB,WAClBC,SAASC,iBAAiB,QAAS,EAAKN,YAV5C,EAaEO,qBAAuB,WACrBF,SAASG,oBAAoB,QAAS,EAAKR,YAd/C,4CAiBE,WACE,IAAQD,EAAeU,KAAKX,MAApBC,WAER,OACE,qBAAKW,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGX,EAAU,mCACqBA,EADrB,KAEP,kCAzBd,GAAyBY,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.39f52348.chunk.js","sourcesContent":["import React from 'react';\n\ninterface State {\n  pressedKey: string,\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    pressedKey: '',\n  };\n\n  handelKey = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event.key });\n  };\n\n  componentDidMount = () => {\n    document.addEventListener('keyup', this.handelKey);\n  };\n\n  componentWillUnmount = () => {\n    document.removeEventListener('keyup', this.handelKey);\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {pressedKey\n            ? `The last pressed key is [${pressedKey}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}